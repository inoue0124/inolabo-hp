{"version":3,"sources":["webpack:///./src/components/blog/featured.tsx","webpack:///./src/components/blog/search.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/blog/cardSmall.tsx","webpack:///./src/components/blog/sidebar.tsx"],"names":["Featured","markdown","id","edges","map","index","node","key","fields","slug","className","to","fluid","frontmatter","featuredImage","childImageSharp","title","category","Search","query","blogPosts","filteredPosts","filter","titleMatch","toLowerCase","includes","topicMatch","tagsMatch","tags","tag","some","descriptionMatch","description","replace","length","posts","BlogPage","data","location","search","split","queryType","allMarkdownRemark","CardSmall","Sidebar"],"mappings":"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","file":"component---src-pages-blog-tsx-9b3ee71d013e3069a844.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\ntype Props = {\n  markdown: any\n}\n\nconst Featured: React.FC<Props> = ({ markdown }) => {\n  if (!markdown) {\n    return <div>...loading</div>\n  } else {\n    return (\n      <div id=\"featured\">\n        {markdown.edges.map(({ node }: any, index: any) => {\n          if (index === 0) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-main\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else if (index < 3) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-secondary\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else return null\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Featured\n","import React from \"react\"\nimport Card from \"./card\"\nimport Sidebar from \"./sidebar\"\n\ntype Props = {\n  markdown: any\n  query: string\n}\n\nconst Search: React.FC<Props> = ({ markdown, query }) => {\n  const blogPosts = markdown.edges\n\n  const filteredPosts = blogPosts.filter(({ node }: any) => {\n    const { frontmatter } = node\n\n    const titleMatch = frontmatter.title\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const topicMatch = frontmatter.category\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const tagsMatch = frontmatter.tags\n      .map((tag: string) => tag.toLowerCase())\n      .some((tag: string) => tag.includes(query.toLowerCase()))\n    const descriptionMatch = frontmatter.description\n      .toLowerCase()\n      .includes(query.toLowerCase())\n\n    return titleMatch || topicMatch || tagsMatch || descriptionMatch\n  })\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"page-header\">\n          \"<strong>{query.replace(\"%20\", \" \")}</strong>\"\n          {filteredPosts.length > 0\n            ? \"の検索結果\"\n            : \"に一致する記事はありませんでした。\"}\n        </h2>\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">記事一覧</h2>\n            {filteredPosts.map(({ node }: any, index: number) => {\n              return (\n                <Card\n                  key={node.id}\n                  fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  title={node.frontmatter.title}\n                  category={node.frontmatter.category}\n                  tags={node.frontmatter.tags}\n                  slug={node.fields.slug}\n                />\n              )\n            })}\n          </div>\n          <Sidebar posts={blogPosts} />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Search\n","import React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\n\nimport Layout from \"../components/blog/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/blog/card\"\nimport Featured from \"../components/blog/featured\"\nimport Search from \"../components/blog/search\"\nimport Sidebar from \"../components/blog/sidebar\"\n\nconst BlogPage: React.FC<PageProps<GatsbyTypes.BlogPageQuery>> = ({\n  data,\n  location,\n}) => {\n  const [queryType, query] = location.search.split(\"=\")\n\n  if (queryType === \"?s\" && query.length > 0) {\n    return (\n      <Layout>\n        <Search markdown={data.allMarkdownRemark} query={query} />\n      </Layout>\n    )\n  } else {\n    return (\n      <Layout>\n        <SEO title=\"Home\" />\n        <Featured markdown={data.allMarkdownRemark} />\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">記事一覧</h2>\n            {data.allMarkdownRemark.edges.map(\n              ({ node }: any, index: number) => {\n                if (index < 3) {\n                  return null\n                } else {\n                  return (\n                    <Card\n                      key={node.id}\n                      fluid={\n                        node.frontmatter.featuredImage.childImageSharp.fluid\n                      }\n                      title={node.frontmatter.title}\n                      category={node.frontmatter.category}\n                      tags={node.frontmatter.tags}\n                      slug={node.fields.slug}\n                    />\n                  )\n                }\n              }\n            )}\n          </div>\n          <Sidebar posts={data.allMarkdownRemark.edges} />\n        </div>\n        <Link to=\"/archive/2\" id=\"archive-link\">\n          もっと見る\n          <FaAngleDoubleRight className=\"icon-right\" />\n        </Link>{\" \"}\n        <br />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPage\n\nexport const query = graphql`\n  query BlogPage {\n    tagsGroup: allMarkdownRemark(limit: 100) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年MM月DD日\")\n            title\n            description\n            category\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image, { FluidObject } from \"gatsby-image\"\n\ntype Props = {\n  fluid: FluidObject | FluidObject[]\n  title: string\n  category: string\n  slug: string\n}\n\nconst CardSmall: React.FC<Props> = ({ fluid, title, category, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image className=\"card-small-image\" fluid={fluid} />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{title}</h3>\n        </Link>\n        <Link to={`/${category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default CardSmall\n","import React from \"react\"\nimport CardSmall from \"./cardSmall\"\n\ntype Props = {\n  posts: any\n}\n\nconst Sidebar: React.FC<Props> = ({ posts }) => {\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-header\">人気記事一覧</h2>\n      <div className=\"sidebar-popular\">\n        {posts.map(({ node }: any, index: number) => {\n          if (index > 2 && index < 5) {\n            return (\n              <CardSmall\n                key={node.fields.slug}\n                fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                title={node.frontmatter.title}\n                category={node.frontmatter.category}\n                slug={node.fields.slug}\n              />\n            )\n          } else return null\n        })}\n      </div>\n    </div>\n  )\n}\nexport default Sidebar\n"],"sourceRoot":""}