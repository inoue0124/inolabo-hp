{"version":3,"sources":["webpack:///./src/components/blog/header.js","webpack:///./src/components/blog/footer.js","webpack:///./src/components/blog/layout.js","webpack:///./src/pages/topics.js"],"names":["Header","siteTitle","menuOpen","setMenuOpen","data","useStaticQuery","id","className","onClick","to","style","textDecoration","onSubmit","e","preventDefault","navigate","target","query","value","toLowerCase","type","aria-label","allTopicsJson","edges","map","node","key","slug","name","title","iconComponent","bgColor","borderBottom","defaultProps","useStyles","makeStyles","theme","navTxt","fontSize","color","Footer","classes","Typography","align","variant","Date","getFullYear","Layout","children","useState","site","siteMetadata","Topics","allMarkdownRemark","group","topic","fieldValue","replace","totalCount"],"mappings":"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","file":"component---src-pages-topics-js-734e13e379a82b67129c.js","sourcesContent":["import { Link, useStaticQuery, graphql, navigate } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport { FiMenu } from \"react-icons/fi\"\nimport { MdClose } from \"react-icons/md\"\nimport { IoIosSearch } from \"react-icons/io\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\nconst Header = ({ siteTitle, menuOpen, setMenuOpen }) => {\n  const data = useStaticQuery(graphql`\n    {\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header id=\"header\">\n      <div className=\"container\">\n        <button\n          id=\"site-logo-wrapper\"\n          onClick={() => {\n            if (menuOpen) {\n              setMenuOpen(false)\n            }\n          }}\n        >\n          <Link\n            to=\"/blog\"\n            id=\"site-logo\"\n            style={{\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </button>\n\n        <nav id=\"nav\">\n          <div id=\"search-box\">\n            <form\n              onSubmit={e => {\n                e.preventDefault()\n                navigate(`/blog?s=${e.target.query.value.toLowerCase()}`)\n              }}\n            >\n              <input type=\"text\" id=\"query\" aria-label=\"Search\" />\n            </form>\n            <IoIosSearch />\n          </div>\n          <ul>\n            <li>\n              <Link to=\"/blog\">トップ</Link>\n            </li>\n            {data.allTopicsJson.edges.map(({ node }) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n\n          {menuOpen ? (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(false)}>\n              <MdClose />\n            </button>\n          ) : (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(true)}>\n              <FiMenu />\n            </button>\n          )}\n        </nav>\n      </div>\n      {menuOpen && (\n        <div id=\"menu\">\n          <ul>\n            {data.allTopicsJson.edges.map(({ node }) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li style={{ borderBottom: \"none\" }}>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      )}\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link, useStaticQuery } from \"gatsby\"\nimport {\n  TiSocialTwitter,\n  TiSocialLinkedin,\n  TiSocialFacebook,\n  TiSocialYoutube,\n} from \"react-icons/ti\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\nconst useStyles = makeStyles(theme => ({\n  navTxt: {\n    fontSize: \"14px\",\n    color: \"#fff\",\n  },\n}))\n\nconst Footer = () => {\n  const classes = useStyles()\n  const data = useStaticQuery(graphql`\n    {\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <footer id=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-social\">\n          <Typography align=\"left\" variant=\"h4\">\n            INOLABO\n          </Typography>\n          <Typography align=\"left\" variant=\"body2\">\n            © {new Date().getFullYear()} INOLABO, All Right Reserved\n          </Typography>\n          {/* <div className=\"footer-social-icons\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"tw-icon\">\n                <TiSocialTwitter className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.youtube.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"yt-icon\">\n                <TiSocialYoutube className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"li-icon\">\n                <TiSocialLinkedin className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"fb-icon\">\n                <TiSocialFacebook className=\"footer-social-icon\" />\n              </span>\n            </a>\n          </div> */}\n        </div>\n        <div id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxt}>トップ</span>\n              </Link>\n            </li>\n            {data.allTopicsJson.edges.map(({ node }) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>\n                  <span className={classes.navTxt}>{node.name}</span>\n                </Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">\n                <span className={classes.navTxt}>INOLABOについて</span>\n              </Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  )\n}\nexport default Footer\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../../styles/styles.css\"\n\nconst Layout = ({ children }) => {\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query BlogTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        menuOpen={menuOpen}\n        setMenuOpen={setMenuOpen}\n      />\n      <div className=\"container\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/blog/layout\"\n\nconst Topics = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(limit: 2000) {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY年MM月DD日\")\n              title\n              description\n              tags\n              category\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 400) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <h2 className=\"page-header\">タグ一覧</h2>\n      <div id=\"all-topics-list\">\n        {data.allMarkdownRemark.group.map(topic => (\n          <Link\n            to={`/${topic.fieldValue.toLowerCase().replace(\" \", \"-\")}/`}\n            key={topic.fieldValue}\n            className=\"tag\"\n          >\n            <span>\n              {topic.fieldValue} ({topic.totalCount})\n            </span>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\nexport default Topics\n"],"sourceRoot":""}