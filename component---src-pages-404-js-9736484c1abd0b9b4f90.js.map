{"version":3,"sources":["webpack:///./src/components/index/header.js","webpack:///./src/components/index/footer.js","webpack:///./src/components/image.js","webpack:///./src/components/index/layout.js","webpack:///./src/pages/404.js"],"names":["useStyles","makeStyles","theme","navTxtEn","fontSize","color","navTxt","Header","siteTitle","menuOpen","setMenuOpen","isTransparent","classes","id","className","onClick","to","title","iconComponent","bgColor","defaultProps","Footer","align","variant","Date","getFullYear","Image","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","style","height","width","margin","fluid","childImageSharp","alt","Layout","children","useState","useStaticQuery","site","siteMetadata","NotFoundPage","marginTop","marginBottom","textAlign"],"mappings":"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","file":"component---src-pages-404-js-9736484c1abd0b9b4f90.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport { FiMenu } from \"react-icons/fi\"\nimport { MdClose } from \"react-icons/md\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  navTxtEn: {\n    fontSize: \"16px\",\n    color: \"#505050\",\n  },\n  navTxt: {\n    fontSize: \"14px\",\n    color: \"#505050\",\n  },\n}))\n\nconst Header = ({ siteTitle, menuOpen, setMenuOpen, isTransparent }) => {\n  const classes = useStyles()\n\n  return (\n    <header id=\"header\" className={`${isTransparent ? \"transparent\" : \"\"}`}>\n      <div className=\"container\">\n        <button\n          id=\"site-logo-wrapper\"\n          onClick={() => {\n            if (menuOpen) {\n              setMenuOpen(false)\n            }\n          }}\n        >\n          <Link to=\"/\" id=\"site-logo\">\n            {siteTitle}\n          </Link>\n        </button>\n\n        <nav id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/#solution\">\n                <span className={classes.navTxtEn}>SOLUTION</span>\n                <br />\n                <span className={classes.navTxt}>事業</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#works\">\n                <span className={classes.navTxtEn}>WORKS</span>\n                <br />\n                <span className={classes.navTxt}>制作事例</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#about\">\n                <span className={classes.navTxtEn}>ABOUT</span>\n                <br />\n                <span className={classes.navTxt}>INOLABOとは</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxtEn}>BLOG</span>\n                <br />\n                <span className={classes.navTxt}>ブログ</span>\n              </Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お問い合わせ\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"#F2994A\"\n                to=\"/inquiry\"\n              />\n            </li>\n          </ul>\n          {menuOpen ? (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(false)}>\n              <MdClose />\n            </button>\n          ) : (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(true)}>\n              <FiMenu />\n            </button>\n          )}\n        </nav>\n      </div>\n      {menuOpen && (\n        <div id=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/#solution\">\n                <span className={classes.navTxtEn}>SOLUTION</span>\n                <br />\n                <span className={classes.navTxt}>事業</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#works\">\n                <span className={classes.navTxtEn}>WORKS</span>\n                <br />\n                <span className={classes.navTxt}>制作事例</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#about\">\n                <span className={classes.navTxtEn}>ABOUT</span>\n                <br />\n                <span className={classes.navTxt}>INOLABOとは</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxtEn}>BLOG</span>\n                <br />\n                <span className={classes.navTxt}>ブログ</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      )}\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  TiSocialTwitter,\n  TiSocialLinkedin,\n  TiSocialFacebook,\n  TiSocialYoutube,\n} from \"react-icons/ti\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  navTxtEn: {\n    fontSize: \"16px\",\n    color: \"#fff\",\n  },\n  navTxt: {\n    fontSize: \"14px\",\n    color: \"#fff\",\n  },\n}))\n\nconst Footer = () => {\n  const classes = useStyles()\n  return (\n    <footer id=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-social\">\n          <Typography align=\"left\" variant=\"h4\">\n            INOLABO\n          </Typography>\n          <Typography align=\"left\" variant=\"body2\">\n            © {new Date().getFullYear()} INOLABO, All Right Reserved\n          </Typography>\n          {/* <div className=\"footer-social-icons\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"tw-icon\">\n                <TiSocialTwitter className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.youtube.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"yt-icon\">\n                <TiSocialYoutube className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"li-icon\">\n                <TiSocialLinkedin className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"fb-icon\">\n                <TiSocialFacebook className=\"footer-social-icon\" />\n              </span>\n            </a>\n          </div> */}\n        </div>\n        <div id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/#solution\">\n                <span className={classes.navTxtEn}>SOLUTION</span>\n                <br />\n                <span className={classes.navTxt}>事業</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#works\">\n                <span className={classes.navTxtEn}>WORKS</span>\n                <br />\n                <span className={classes.navTxt}>制作事例</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/#about\">\n                <span className={classes.navTxtEn}>ABOUT</span>\n                <br />\n                <span className={classes.navTxt}>INOLABOとは</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxtEn}>BLOG</span>\n                <br />\n                <span className={classes.navTxt}>ブログ</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  )\n}\nexport default Footer\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 2500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    /*\n      サイズFIXしたい時は上記childImageSharp {...}の中を以下のように変更\n              sizes(maxWidth: 300) {\n                ...GatsbyImageSharpSizes\n              }\n    */\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename)\n      })\n      if (!image) {\n        return null\n      }\n      //const imageSizes = image.node.childImageSharp.sizes; ←サイズFIXしたい時\n      return (\n        /*<Img alt={props.alt} sizes={imageSizes} /> ←サイズFIXしたい時 */\n        <Img\n          style={{ height: props.height, width: props.width, margin: \"auto\" }}\n          fluid={image.node.childImageSharp.fluid}\n          alt={props.alt}\n        />\n      )\n    }}\n  />\n)\nexport default Image\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../../styles/styles.css\"\n\nconst Layout = ({ children }) => {\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        menuOpen={menuOpen}\n        setMenuOpen={setMenuOpen}\n      />\n      <div className=\"container\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/index/layout\"\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: ページが見つかりません\" />\n    <div\n      style={{ marginTop: \"100px\", marginBottom: \"50px\", textAlign: \"center\" }}\n    >\n      <h1>404</h1>\n      <div>\n        <Image filename=\"sorry\" width=\"200px\" className=\"article-image\"></Image>\n      </div>\n      <p style={{ marginTop: \"30px\" }}>お探しのページが見つかりません。</p>\n      <p>一時的にアクセスできない状況にあるか、</p>\n      <p>移動もしくは削除された可能性があります。</p>\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}