{"version":3,"sources":["webpack:///./src/pages/topics.tsx","webpack:///./src/components/blog/header.tsx","webpack:///./src/components/blog/footer.tsx","webpack:///./src/components/blog/layout.tsx"],"names":["Topics","data","className","id","allMarkdownRemark","group","map","topic","to","fieldValue","toLowerCase","replace","key","totalCount","Header","siteTitle","isMenuOpen","setMenuOpen","useState","query","setQuery","useStaticQuery","onClick","style","textDecoration","onSubmit","e","preventDefault","navigate","type","aria-label","onChange","target","value","allTopicsJson","edges","node","slug","name","title","iconComponent","bgColor","borderBottom","useStyles","makeStyles","theme","navTxt","fontSize","color","Footer","props","classes","Typography","align","variant","Date","getFullYear","href","rel","prop","Layout","children","menuOpen","site","siteMetadata"],"mappings":"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","file":"component---src-pages-topics-tsx-1680e781d140c2053c61.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\nimport Layout from \"../components/blog/layout\"\n\nconst Topics: React.FC<PageProps<GatsbyTypes.TopicsPageQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <h2 className=\"page-header\">タグ一覧</h2>\n      <div id=\"all-topics-list\">\n        {data.allMarkdownRemark.group.map((topic: any) => (\n          <Link\n            to={`/${topic.fieldValue.toLowerCase().replace(\" \", \"-\")}/`}\n            key={topic.fieldValue}\n            className=\"tag\"\n          >\n            <span>\n              {topic.fieldValue} ({topic.totalCount})\n            </span>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Topics\n\nexport const query = graphql`\n  query TopicsPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年MM月DD日\")\n            title\n            description\n            tags\n            category\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link, useStaticQuery, graphql, navigate } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport { FiMenu } from \"react-icons/fi\"\nimport { MdClose } from \"react-icons/md\"\nimport { IoIosSearch } from \"react-icons/io\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\ntype Props = {\n  siteTitle: string\n  isMenuOpen: boolean\n  setMenuOpen: (flag: boolean) => void\n}\n\nconst Header: React.FC<Props> = ({ siteTitle, isMenuOpen, setMenuOpen }) => {\n  const [query, setQuery] = useState<string>(\"\")\n  const data = useStaticQuery<GatsbyTypes.HeaderQuery>(graphql`\n    query Header {\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header id=\"header\">\n      <div className=\"container\">\n        <button\n          id=\"site-logo-wrapper\"\n          onClick={() => {\n            if (isMenuOpen) {\n              setMenuOpen(false)\n            }\n          }}\n        >\n          <Link\n            to=\"/blog\"\n            id=\"site-logo\"\n            style={{\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </button>\n\n        <nav id=\"nav\">\n          <div id=\"search-box\">\n            <form\n              onSubmit={e => {\n                e.preventDefault()\n                navigate(`/blog?s=${query.toLowerCase()}`)\n              }}\n            >\n              <input\n                type=\"text\"\n                aria-label=\"Search\"\n                onChange={e => setQuery(e.target.value)}\n              />\n            </form>\n            <IoIosSearch />\n          </div>\n          <ul>\n            <li>\n              <Link to=\"/blog\">トップ</Link>\n            </li>\n            {data.allTopicsJson.edges.map(({ node }: any) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n\n          {isMenuOpen ? (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(false)}>\n              <MdClose />\n            </button>\n          ) : (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(true)}>\n              <FiMenu />\n            </button>\n          )}\n        </nav>\n      </div>\n      {isMenuOpen && (\n        <div id=\"menu\">\n          <ul>\n            {data.allTopicsJson.edges.map(({ node }: any) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li style={{ borderBottom: \"none\" }}>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  TiSocialTwitter,\n  TiSocialLinkedin,\n  TiSocialFacebook,\n  TiSocialYoutube,\n} from \"react-icons/ti\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\nconst useStyles = makeStyles(theme => ({\n  navTxt: {\n    fontSize: \"14px\",\n    color: \"#fff\",\n  },\n}))\n\ntype Props = {\n  props: any\n}\n\nconst Footer: React.FC<Props> = ({ props }) => {\n  const classes = useStyles()\n\n  return (\n    <footer id=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-social\">\n          <Typography align=\"left\" variant=\"h4\">\n            INOLABO\n          </Typography>\n          <Typography align=\"left\" variant=\"body2\">\n            © {new Date().getFullYear()} INOLABO, All Right Reserved\n          </Typography>\n          <div className=\"footer-social-icons\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"tw-icon\">\n                <TiSocialTwitter className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.youtube.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"yt-icon\">\n                <TiSocialYoutube className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"li-icon\">\n                <TiSocialLinkedin className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"fb-icon\">\n                <TiSocialFacebook className=\"footer-social-icon\" />\n              </span>\n            </a>\n          </div>\n        </div>\n        <div id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxt}>トップ</span>\n              </Link>\n            </li>\n            {props.map((prop: any) => (\n              <li key={prop.node.slug}>\n                <Link to={`/${prop.node.slug}`}>\n                  <span className={classes.navTxt}>{prop.node.name}</span>\n                </Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">\n                <span className={classes.navTxt}>INOLABOについて</span>\n              </Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  )\n}\nexport default Footer\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, PageProps } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../../styles/styles.css\"\n\nconst Layout: React.FC = ({ children }) => {\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  const data = useStaticQuery<GatsbyTypes.BlogTitleQuery>(graphql`\n    query BlogTitle {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site?.siteMetadata?.title || `Title`}\n        isMenuOpen={menuOpen}\n        setMenuOpen={setMenuOpen}\n      />\n      <div className=\"container\">\n        <main>{children}</main>\n      </div>\n      <Footer props={data.allTopicsJson.edges} />\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}