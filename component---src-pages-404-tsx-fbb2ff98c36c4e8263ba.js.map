{"version":3,"sources":["webpack:///./src/components/image.tsx","webpack:///./src/pages/404.tsx","webpack:///./src/components/blog/header.tsx","webpack:///./src/components/blog/footer.tsx","webpack:///./src/components/blog/layout.tsx"],"names":["Image","filename","height","width","alt","image","useStaticQuery","images","edges","find","da","node","relativePath","includes","style","margin","fluid","childImageSharp","NotFoundPage","title","marginTop","marginBottom","textAlign","Header","siteTitle","isMenuOpen","setMenuOpen","useState","query","setQuery","data","id","className","onClick","to","textDecoration","onSubmit","e","preventDefault","navigate","toLowerCase","type","aria-label","onChange","target","value","allTopicsJson","map","key","slug","name","iconComponent","bgColor","borderBottom","useStyles","makeStyles","theme","navTxt","fontSize","color","Footer","props","classes","Typography","align","variant","Date","getFullYear","href","rel","prop","Layout","children","menuOpen","site","siteMetadata"],"mappings":"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","file":"component---src-pages-404-tsx-fbb2ff98c36c4e8263ba.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\ntype Props = {\n  filename: string\n  height?: string | number\n  width?: string | number\n  alt: string\n}\n\nconst Image: React.FC<Props> = ({ filename, height, width, alt }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      images: allFile {\n        edges {\n          node {\n            relativePath\n            name\n            childImageSharp {\n              fluid(maxWidth: 2500) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const image = data.images.edges.find((da: any) => {\n    return da.node.relativePath.includes(filename)\n  })\n  if (!image) {\n    return null\n  }\n  //const imageSizes = image.node.childImageSharp.sizes; ←サイズFIXしたい時\n  return (\n    /*<Img alt={props.alt} sizes={imageSizes} /> ←サイズFIXしたい時 */\n    <Img\n      style={{ height: height, width: width, margin: \"auto\" }}\n      fluid={image.node.childImageSharp.fluid}\n      alt={alt}\n    />\n  )\n}\n\nexport default Image\n","import React from \"react\"\n\nimport Layout from \"../components/blog/layout\"\nimport SEO from \"../components/seo\"\nimport Image from \"../components/image\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: ページが見つかりません\" />\n    <div\n      style={{ marginTop: \"100px\", marginBottom: \"50px\", textAlign: \"center\" }}\n    >\n      <h1>404</h1>\n      <div>\n        <Image filename=\"sorry\" width=\"200px\" alt=\"404\"></Image>\n      </div>\n      <p style={{ marginTop: \"30px\" }}>お探しのページが見つかりません。</p>\n      <p>一時的にアクセスできない状況にあるか、</p>\n      <p>移動もしくは削除された可能性があります。</p>\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import { Link, useStaticQuery, graphql, navigate } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport { FiMenu } from \"react-icons/fi\"\nimport { MdClose } from \"react-icons/md\"\nimport { IoIosSearch } from \"react-icons/io\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\ntype Props = {\n  siteTitle: string\n  isMenuOpen: boolean\n  setMenuOpen: (flag: boolean) => void\n}\n\nconst Header: React.FC<Props> = ({ siteTitle, isMenuOpen, setMenuOpen }) => {\n  const [query, setQuery] = useState<string>(\"\")\n  const data = useStaticQuery<GatsbyTypes.HeaderQuery>(graphql`\n    query Header {\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header id=\"header\">\n      <div className=\"container\">\n        <button\n          id=\"site-logo-wrapper\"\n          onClick={() => {\n            if (isMenuOpen) {\n              setMenuOpen(false)\n            }\n          }}\n        >\n          <Link\n            to=\"/blog\"\n            id=\"site-logo\"\n            style={{\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </button>\n\n        <nav id=\"nav\">\n          <div id=\"search-box\">\n            <form\n              onSubmit={e => {\n                e.preventDefault()\n                navigate(`/blog?s=${query.toLowerCase()}`)\n              }}\n            >\n              <input\n                type=\"text\"\n                aria-label=\"Search\"\n                onChange={e => setQuery(e.target.value)}\n              />\n            </form>\n            <IoIosSearch />\n          </div>\n          <ul>\n            <li>\n              <Link to=\"/blog\">トップ</Link>\n            </li>\n            {data.allTopicsJson.edges.map(({ node }: any) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n\n          {isMenuOpen ? (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(false)}>\n              <MdClose />\n            </button>\n          ) : (\n            <button className=\"menu-button\" onClick={() => setMenuOpen(true)}>\n              <FiMenu />\n            </button>\n          )}\n        </nav>\n      </div>\n      {isMenuOpen && (\n        <div id=\"menu\">\n          <ul>\n            {data.allTopicsJson.edges.map(({ node }: any) => (\n              <li key={node.slug}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">INOLABOについて</Link>\n            </li>\n            <li style={{ borderBottom: \"none\" }}>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  TiSocialTwitter,\n  TiSocialLinkedin,\n  TiSocialFacebook,\n  TiSocialYoutube,\n} from \"react-icons/ti\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CustomBtn from \"../button\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\n\nconst useStyles = makeStyles(theme => ({\n  navTxt: {\n    fontSize: \"14px\",\n    color: \"#fff\",\n  },\n}))\n\ntype Props = {\n  props: any\n}\n\nconst Footer: React.FC<Props> = ({ props }) => {\n  const classes = useStyles()\n\n  return (\n    <footer id=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-social\">\n          <Typography align=\"left\" variant=\"h4\">\n            INOLABO\n          </Typography>\n          <Typography align=\"left\" variant=\"body2\">\n            © {new Date().getFullYear()} INOLABO, All Right Reserved\n          </Typography>\n          <div className=\"footer-social-icons\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"tw-icon\">\n                <TiSocialTwitter className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.youtube.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"yt-icon\">\n                <TiSocialYoutube className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"li-icon\">\n                <TiSocialLinkedin className=\"footer-social-icon\" />\n              </span>\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon-container\" id=\"fb-icon\">\n                <TiSocialFacebook className=\"footer-social-icon\" />\n              </span>\n            </a>\n          </div>\n        </div>\n        <div id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/blog\">\n                <span className={classes.navTxt}>トップ</span>\n              </Link>\n            </li>\n            {props.map((prop: any) => (\n              <li key={prop.node.slug}>\n                <Link to={`/${prop.node.slug}`}>\n                  <span className={classes.navTxt}>{prop.node.name}</span>\n                </Link>\n              </li>\n            ))}\n            <li>\n              <Link to=\"/about\">\n                <span className={classes.navTxt}>INOLABOについて</span>\n              </Link>\n            </li>\n            <li>\n              <CustomBtn\n                title=\"お仕事の依頼\"\n                iconComponent={<MailOutlineIcon />}\n                bgColor=\"primary\"\n                to=\"/\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  )\n}\nexport default Footer\n","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, PageProps } from \"gatsby\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../../styles/styles.css\"\n\nconst Layout: React.FC = ({ children }) => {\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  const data = useStaticQuery<GatsbyTypes.BlogTitleQuery>(graphql`\n    query BlogTitle {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site?.siteMetadata?.title || `Title`}\n        isMenuOpen={menuOpen}\n        setMenuOpen={setMenuOpen}\n      />\n      <div className=\"container\">\n        <main>{children}</main>\n      </div>\n      <Footer props={data.allTopicsJson.edges} />\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}