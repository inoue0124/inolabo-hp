{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/blog/cardSmall.tsx","webpack:///./src/components/blog/sidebar.tsx"],"names":["TagPageTemplate","pageContext","data","useStaticQuery","tag","allMarkdownRemark","edges","edgesWithTag","totalCount","filter","node","frontmatter","tags","includes","tagHeader","length","pageType","className","id","map","index","key","fluid","featuredImage","childImageSharp","title","category","slug","fields","to","posts","CardSmall","toLowerCase","replace","Sidebar"],"mappings":"4FAAA,4FAmFeA,UA1Ef,YAA2C,IAAhBC,EAAe,EAAfA,YACnBC,EAAOC,yBAAe,cAiCpBC,EAAQH,EAARG,IACR,EAA8BF,EAAKG,kBAA3BC,EAAR,EAAQA,MAEFC,GAFN,EAAeC,WAEMF,EAAMG,QAAO,YAChC,OAD8C,EAAXC,KACvBC,YAAYC,KAAKC,SAAST,OAGlCU,EAAS,IAAOV,EAAP,QAAkBG,EAAaQ,OAA/B,OAEf,OACE,kBAAC,IAAD,CAAQC,SAAS,OACf,6BACE,wBAAIC,UAAU,eAAeH,GAC7B,yBAAKG,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIC,GAAG,kBAAP,QACCX,EAAaY,KAAI,WAAWC,GAAW,IAAnBV,EAAkB,EAAlBA,KACnB,OACE,kBAAC,IAAD,CACEW,IAAKX,EAAKQ,GACVI,MAAOZ,EAAKC,YAAYY,cAAcC,gBAAgBF,MACtDG,MAAOf,EAAKC,YAAYc,MACxBC,SAAUhB,EAAKC,YAAYe,SAC3Bd,KAAMF,EAAKC,YAAYC,KACvBe,KAAMjB,EAAKkB,OAAOD,UAIxB,kBAAC,OAAD,CAAME,GAAG,UAAUX,GAAG,mBACpB,sCACA,kBAAC,IAAD,CAAoBD,UAAU,0BAGlC,kBAAC,IAAD,CAASa,MAAO5B,EAAKG,kBAAkBC,a,4FC/ClCyB,EAlBoB,SAAC,GAAqC,IAAnCT,EAAmC,EAAnCA,MAAOG,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC5D,OACE,4BAAQV,UAAU,qBAChB,kBAAC,OAAD,CAAMY,GAAIF,GACR,kBAAC,IAAD,CAAOV,UAAU,mBAAmBK,MAAOA,KAG7C,oCACE,kBAAC,OAAD,CAAMO,GAAIF,GACR,4BAAKF,IAEP,kBAAC,OAAD,CAAMI,GAAE,IAAMH,EAASM,cAAcC,QAAQ,IAAK,MAChD,0BAAMhB,UAAU,oBAAoBS,OCM/BQ,IAtBkB,SAAC,GAAc,IAAZJ,EAAY,EAAZA,MAClC,OACE,yBAAKb,UAAU,WACb,wBAAIA,UAAU,kBAAd,UACA,yBAAKA,UAAU,mBACZa,EAAMX,KAAI,WAAgBC,GAAkB,IAA/BV,EAA+B,EAA/BA,KACZ,OAAIU,EAAQ,GAAKA,EAAQ,EAErB,kBAAC,EAAD,CACEC,IAAKX,EAAKkB,OAAOD,KACjBL,MAAOZ,EAAKC,YAAYY,cAAcC,gBAAgBF,MACtDG,MAAOf,EAAKC,YAAYc,MACxBC,SAAUhB,EAAKC,YAAYe,SAC3BC,KAAMjB,EAAKkB,OAAOD,OAGV","file":"component---src-templates-tag-page-js-4f07270e117fc7fb9ca8.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/blog/layout\"\n\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\n\nimport Card from \"../components/blog/card\"\nimport Sidebar from \"../components/blog/sidebar\"\n\nfunction TagPageTemplate({ pageContext }) {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY年MM月DD日\")\n              title\n              description\n              tags\n              category\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 400) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n\n  const edgesWithTag = edges.filter(({ node }) => {\n    return node.frontmatter.tags.includes(tag)\n  })\n\n  const tagHeader = `\"${tag}\"に関する${edgesWithTag.length}件の投稿`\n\n  return (\n    <Layout pageType=\"Tag\">\n      <div>\n        <h2 className=\"page-header\">{tagHeader}</h2>\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">記事一覧</h2>\n            {edgesWithTag.map(({ node }, index) => {\n              return (\n                <Card\n                  key={node.id}\n                  fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  title={node.frontmatter.title}\n                  category={node.frontmatter.category}\n                  tags={node.frontmatter.tags}\n                  slug={node.fields.slug}\n                />\n              )\n            })}\n            <Link to=\"/topics\" id=\"all-topics-link\">\n              <span>タグ一覧</span>\n              <FaAngleDoubleRight className=\"icon-right icon-fix\" />\n            </Link>\n          </div>\n          <Sidebar posts={data.allMarkdownRemark.edges} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image, { FluidObject } from \"gatsby-image\"\n\ntype Props = {\n  fluid: FluidObject | FluidObject[]\n  title: string\n  category: string\n  slug: string\n}\n\nconst CardSmall: React.FC<Props> = ({ fluid, title, category, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image className=\"card-small-image\" fluid={fluid} />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{title}</h3>\n        </Link>\n        <Link to={`/${category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default CardSmall\n","import React from \"react\"\nimport CardSmall from \"./cardSmall\"\n\ntype Props = {\n  posts: any\n}\n\nconst Sidebar: React.FC<Props> = ({ posts }) => {\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-header\">人気記事一覧</h2>\n      <div className=\"sidebar-popular\">\n        {posts.map(({ node }: any, index: number) => {\n          if (index > 2 && index < 5) {\n            return (\n              <CardSmall\n                key={node.fields.slug}\n                fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                title={node.frontmatter.title}\n                category={node.frontmatter.category}\n                slug={node.fields.slug}\n              />\n            )\n          } else return null\n        })}\n      </div>\n    </div>\n  )\n}\nexport default Sidebar\n"],"sourceRoot":""}