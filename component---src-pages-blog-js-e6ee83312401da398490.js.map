{"version":3,"sources":["webpack:///./src/components/blog/cardSmall.js","webpack:///./src/components/blog/sidebar.js","webpack:///./src/components/blog/featured.js","webpack:///./src/components/blog/search.js","webpack:///./src/pages/blog.js"],"names":["Card","frontmatter","slug","className","to","fluid","featuredImage","childImageSharp","title","category","toLowerCase","replace","Sidebar","posts","map","index","node","key","fields","Featured","markdown","id","edges","Search","query","blogPosts","filteredPosts","filter","titleMatch","includes","topicMatch","tagsMatch","tags","tag","some","descriptionMatch","description","length","BlogPage","props","data","useStaticQuery","location","search","split","queryType","allMarkdownRemark","tagsGroup"],"mappings":"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","file":"component---src-pages-blog-js-e6ee83312401da398490.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Card = ({ frontmatter, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image\n          className=\"card-small-image\"\n          fluid={frontmatter.featuredImage.childImageSharp.fluid}\n        />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{frontmatter.title}</h3>\n        </Link>\n        <Link to={`/${frontmatter.category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{frontmatter.category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default Card\n","import React from \"react\"\nimport CardSmall from \"./cardSmall\"\n\nconst Sidebar = ({ posts }) => {\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-header\">人気記事一覧</h2>\n      <div className=\"sidebar-popular\">\n        {posts.map(({ node }, index) => {\n          if (index > 2 && index < 5) {\n            return (\n              <CardSmall\n                key={node.fields.slug}\n                slug={node.fields.slug}\n                frontmatter={node.frontmatter}\n              />\n            )\n          } else return null\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Featured = ({ markdown }) => {\n  if (!markdown) {\n    return <div>...loading</div>\n  } else {\n    return (\n      <div id=\"featured\">\n        {markdown.edges.map(({ node }, index) => {\n          if (index === 0) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-main\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else if (index < 3) {\n            return (\n              <figure\n                key={node.fields.slug}\n                className=\"featured-link featured-secondary\"\n              >\n                <Link to={node.fields.slug}>\n                  <div className=\"featured-overlay\"></div>\n                  <Image\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                  />\n                  <figcaption>\n                    <h2>{node.frontmatter.title}</h2>\n                    <span>{node.frontmatter.category}</span>\n                  </figcaption>\n                </Link>\n              </figure>\n            )\n          } else return null\n        })}\n      </div>\n    )\n  }\n}\nexport default Featured\n","import React from \"react\"\nimport Card from \"./card\"\nimport Sidebar from \"./sidebar\"\n\nconst Search = ({ markdown, query }) => {\n  const blogPosts = markdown.edges\n\n  const filteredPosts = blogPosts.filter(({ node }) => {\n    const { frontmatter } = node\n\n    const titleMatch = frontmatter.title\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const topicMatch = frontmatter.category\n      .toLowerCase()\n      .includes(query.toLowerCase())\n    const tagsMatch = frontmatter.tags\n      .map(tag => tag.toLowerCase())\n      .some(tag => tag.includes(query.toLowerCase()))\n    const descriptionMatch = frontmatter.description\n      .toLowerCase()\n      .includes(query.toLowerCase())\n\n    return titleMatch || topicMatch || tagsMatch || descriptionMatch\n  })\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"page-header\">\n          \"<strong>{query.replace(\"%20\", \" \")}</strong>\"\n          {filteredPosts.length > 0\n            ? \"の検索結果\"\n            : \"に一致する記事はありませんでした。\"}\n        </h2>\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">記事一覧</h2>\n            {filteredPosts.map(({ node }, index) => {\n              return (\n                <Card\n                  key={node.id}\n                  slug={node.fields.slug}\n                  frontmatter={node.frontmatter}\n                />\n              )\n            })}\n          </div>\n          <Sidebar posts={blogPosts} />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Search\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\n\nimport Layout from \"../components/blog/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/blog/card\"\nimport Featured from \"../components/blog/featured\"\nimport Search from \"../components/blog/search\"\nimport Sidebar from \"../components/blog/sidebar\"\n\nconst BlogPage = props => {\n  const data = useStaticQuery(graphql`\n    {\n      tagsGroup: allMarkdownRemark(limit: 100) {\n        group(field: frontmatter___tags) {\n          fieldValue\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY年MM月DD日\")\n              title\n              description\n              category\n              tags\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 600) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const [queryType, query] = props.location.search.split(\"=\")\n\n  if (queryType === \"?s\" && query.length > 0) {\n    return (\n      <Layout>\n        <Search\n          markdown={data.allMarkdownRemark}\n          tagsGroup={data.tagsGroup}\n          query={query}\n        />\n      </Layout>\n    )\n  } else {\n    return (\n      <Layout>\n        <SEO title=\"Home\" slug=\"/\" />\n        <Featured markdown={data.allMarkdownRemark} />\n        <div className=\"flex-layout\">\n          <div className=\"cards\">\n            <h2 id=\"articles-title\">記事一覧</h2>\n            {data.allMarkdownRemark.edges.map(({ node }, index) => {\n              if (index < 3) {\n                return null\n              } else {\n                return (\n                  <Card\n                    key={node.id}\n                    slug={node.fields.slug}\n                    frontmatter={node.frontmatter}\n                  />\n                )\n              }\n            })}\n          </div>\n          <Sidebar posts={data.allMarkdownRemark.edges} />\n        </div>\n        <Link to=\"/archive/2\" id=\"archive-link\">\n          もっと見る\n          <FaAngleDoubleRight className=\"icon-right\" />\n        </Link>{\" \"}\n        <br />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPage\n"],"sourceRoot":""}