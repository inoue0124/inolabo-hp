{"version":3,"sources":["webpack:///./src/templates/topic-page.js","webpack:///./src/components/blog/cardSmall.js","webpack:///./src/components/blog/sidebar.js"],"names":["TopicPageTemplate","pageContext","data","useStaticQuery","topic","edgesWithTopic","allMarkdownRemark","edges","filter","node","frontmatter","category","includes","topicInfo","allTopicsJson","slug","toLowerCase","replace","pageType","className","name","id","map","index","key","fields","posts","Card","to","fluid","featuredImage","childImageSharp","title","Sidebar"],"mappings":"4FAAA,4FA4FeA,UApFW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrBC,EAAOC,yBAAe,aAgDpBC,EAAUH,EAAVG,MAGFC,EAFYH,EAAKI,kBAAfC,MAEqBC,QAAO,YAClC,OADgD,EAAXC,KACzBC,YAAYC,SAASC,SAASR,MAGtCS,EAAYX,EAAKY,cAAcP,MAAMC,QAAO,YAChD,OAD8D,EAAXC,KACvCM,OAASX,EAAMY,cAAcC,QAAQ,IAAK,QACrD,GAAGR,KAEN,OACE,kBAAC,IAAD,CAAQS,SAAS,SACf,yBAAKC,UAAU,qBACb,4BAAKN,EAAUO,OAEjB,yBAAKD,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIE,GAAG,kBAAP,QACChB,EAAeiB,KAAI,WAAWC,GAAW,IAAnBd,EAAkB,EAAlBA,KACrB,OACE,kBAAC,IAAD,CACEe,IAAKf,EAAKgB,OAAOV,KACjBA,KAAMN,EAAKgB,OAAOV,KAClBL,YAAaD,EAAKC,kBAK1B,kBAAC,IAAD,CAASgB,MAAOxB,EAAKI,kBAAkBC,Y,4FC7DhCoB,EArBF,SAAC,GAA2B,IAAzBjB,EAAwB,EAAxBA,YAAaK,EAAW,EAAXA,KAC3B,OACE,4BAAQI,UAAU,qBAChB,kBAAC,OAAD,CAAMS,GAAIb,GACR,kBAAC,IAAD,CACEI,UAAU,mBACVU,MAAOnB,EAAYoB,cAAcC,gBAAgBF,SAIrD,oCACE,kBAAC,OAAD,CAAMD,GAAIb,GACR,4BAAKL,EAAYsB,QAEnB,kBAAC,OAAD,CAAMJ,GAAE,IAAMlB,EAAYC,SAASK,cAAcC,QAAQ,IAAK,MAC5D,0BAAME,UAAU,oBAAoBT,EAAYC,cCK3CsB,IArBC,SAAC,GAAe,IAAbP,EAAY,EAAZA,MACjB,OACE,yBAAKP,UAAU,WACb,wBAAIA,UAAU,kBAAd,UACA,yBAAKA,UAAU,mBACZO,EAAMJ,KAAI,WAAWC,GAAW,IAAnBd,EAAkB,EAAlBA,KACZ,OAAIc,EAAQ,GAAKA,EAAQ,EAErB,kBAAC,EAAD,CACEC,IAAKf,EAAKgB,OAAOV,KACjBA,KAAMN,EAAKgB,OAAOV,KAClBL,YAAaD,EAAKC,cAGV","file":"component---src-templates-topic-page-js-60178844d3d2171d641b.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport Card from \"../components/blog/card\"\nimport Layout from \"../components/blog/layout\"\nimport Sidebar from \"../components/blog/sidebar\"\n\nconst TopicPageTemplate = ({ pageContext }) => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY年MM月DD日\")\n              title\n              description\n              tags\n              category\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 400) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      allTopicsJson {\n        edges {\n          node {\n            name\n            slug\n            image {\n              childImageSharp {\n                fluid(maxWidth: 50, maxHeight: 50) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const { topic } = pageContext\n  const { edges } = data.allMarkdownRemark\n\n  const edgesWithTopic = edges.filter(({ node }) => {\n    return node.frontmatter.category.includes(topic)\n  })\n\n  const topicInfo = data.allTopicsJson.edges.filter(({ node }) => {\n    return node.slug === topic.toLowerCase().replace(\" \", \"-\")\n  })[0].node\n\n  return (\n    <Layout pageType=\"Topic\">\n      <div className=\"topic-page-header\">\n        <h1>{topicInfo.name}</h1>\n      </div>\n      <div className=\"flex-layout\">\n        <div className=\"cards\">\n          <h2 id=\"articles-title\">記事一覧</h2>\n          {edgesWithTopic.map(({ node }, index) => {\n            return (\n              <Card\n                key={node.fields.slug}\n                slug={node.fields.slug}\n                frontmatter={node.frontmatter}\n              />\n            )\n          })}\n        </div>\n        <Sidebar posts={data.allMarkdownRemark.edges} />\n      </div>\n    </Layout>\n  )\n}\n\nexport default TopicPageTemplate\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Card = ({ frontmatter, slug }) => {\n  return (\n    <figure className=\"card-small-styles\">\n      <Link to={slug}>\n        <Image\n          className=\"card-small-image\"\n          fluid={frontmatter.featuredImage.childImageSharp.fluid}\n        />\n      </Link>\n\n      <figcaption>\n        <Link to={slug}>\n          <h3>{frontmatter.title}</h3>\n        </Link>\n        <Link to={`/${frontmatter.category.toLowerCase().replace(\" \", \"-\")}`}>\n          <span className=\"card-small-topic\">{frontmatter.category}</span>\n        </Link>\n      </figcaption>\n    </figure>\n  )\n}\nexport default Card\n","import React from \"react\"\nimport CardSmall from \"./cardSmall\"\n\nconst Sidebar = ({ posts }) => {\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"sidebar-header\">人気記事一覧</h2>\n      <div className=\"sidebar-popular\">\n        {posts.map(({ node }, index) => {\n          if (index > 2 && index < 5) {\n            return (\n              <CardSmall\n                key={node.fields.slug}\n                slug={node.fields.slug}\n                frontmatter={node.frontmatter}\n              />\n            )\n          } else return null\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n"],"sourceRoot":""}